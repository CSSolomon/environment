# |-------------------------------------------------------------------------| #
# |                           Program Information                           | #
# |-------------------------------------------------------------------------| #
# | File         : bash.bashrc.vars                                         | #
# | PL           : vars                                                     | #
# | Purpose      : abstracts variables from bashrc.local                    | #
# | Date         : 2014_04_12                                               | #
# | Author       : Seeker_Odysseas                                          | #
# | +              seeker_odysseas                                          | #
# |-------------------------------------------------------------------------| #
# | keywords     : bashrc variables vars local global                       | #
# |-------------------------------------------------------------------------| #

export THIS_PC="$(hostname | sed -e 's/seeker-//')"
( which zypper 1>/dev/null 2>/dev/null ) && {
    DISTRO="opensuse" ; }
( which pacman 1>/dev/null 2>/dev/null ) && {
    DISTRO="archlinux" ; }
# Ensure there's a timeout limit.
[ -z "$TMOUT" ] && {
    TMOUT=900; 
    #readonly TMOUT; 
    export TMOUT;
} #/set TMOUT if not set

export HISTTIMEFORMAT="%Y%m%d_%H%M%S "

echo "${PATH}" | grep -q -e "${HOME}/bin:" ||
    PATH="${HOME}/bin:${PATH}"

# Disable tty pause via ctrl-s
stty ixany ixoff -ixon
# Set history control properly
export HISTCONTROL="ignoreboth:erasedups";
export HISTSIZE="4000";

PROMPT_COMMAND=(
'echo -n -e "\e]2;$(echo $USER@${HOSTNAME/.*/} | sed -e "s/./\U&/g")\a";'
'pattern="[ \t]*[0-9]\+[ \t]\+[2-9][0-9]\{3\}[01][0-9][0-3][0-9]_[0-2][0-9][0-5][0-9][0-5][0-9]";'
'[ -e ~/.bash_history.log ] || '
  'history | '
    "tr -d -c '[:print:][:space:]' "
    '> ~/.bash_history.log;'
  'history | '
  "tr -d -c '[:print:][:space:]' |"
    'grep --color=never -e "^.*" |'
    'tail -n 1 | '
    'grep -q -e "$(grep --color=never ~/.bash_history.log -e "^${pattern}.*" |'
    'tail -n 1 |'
    'sed -n -e "s/^\(${pattern}\).*/\1/p")"  || '
      '{ expression=$(history |'
      "tr -d -c '[:print:][:space:]' |"
      'grep --color=never -e "^${pattern}" |'
      'tail -n 1 |'
      'awk "{print \$1 \"[ \\\t]*\" \$2}") && '
        'history |'
          "tr -d -c '[:print:][:space:]' |"
        'grep -e "^[ \t]*$expression" -A 99999 >> ~/.bash_history.log; }'
)
PROMPT_COMMAND=${PROMPT_COMMAND[@]}
# Set history control properly
export HISTTIMEFORMAT="%Y%m%d_%H%M%S "
export HISTCONTROL="ignoreboth:erasedups";
export HISTSIZE="4000";

# Set the custom editor to vim.
[ -x "$(which vim)" ] && {\
    export VISUAL=$(which vim) ; 
    export EDITOR=$(which vim) ;
}

if [ "0" != "${UID}" ] ; then 
    alias brc="${EDITOR} ${HOME}/Documents/development/scripts/bash/bashrc.sh";
fi # / settings based on root / user
[ -x "$(which vim)" ] && \
{ export VISUAL=$(which vim) ; export EDITOR=$(which vim) ;
}

e_clear=0;  e_bold=1; e_dim=2;    e_reverse=3; e_underline=4;
f_black=30; f_red=31; f_green=32; f_yellow=33; f_blue=34; f_magenta=35; f_teal=36;
f_white=37;
b_black=40; b_red=41; b_green=42; b_yellow=43; b_blue=44; b_magenta=45; b_teal=46;
b_white=47;

c_type="own"
case ${c_type} in 
work)
    c_hostname="${e_bold};${f_green}"
    c_lvl="${e_bold};${f_magenta}"
    c_date="${e_bold};${f_blue}"
    c_time="${e_bold};${f_white}"
    ;;
own)
    c_hostname="${e_bold};${f_yellow}"
    c_lvl="${e_bold};${f_magenta}"
    c_date="${e_bold};${f_blue}"
    c_time="${e_bold};${f_white}"
    ;;
own-vm)
    c_hostname="${e_bold};${f_yellow}"
    c_lvl="${e_bold};${f_magenta}"
    c_date="${e_bold};${f_blue}"
    c_time="${e_bold};${f_white}"
    ;;
work-vm)
    c_hostname="${e_clear};${e_bold};${b_green};${f_black}"
    c_lvl="${e_clear};${e_bold};${f_magenta}"
    c_date="${e_clear};${e_bold};${f_blue}"
    c_time="${e_clear};${e_bold};${b_white};${f_black}"
    ;;
esac
# Set PS1 to a more informative view.
PS2='> '
PS3='> '
PS4='+ '
if test "$UID" -eq 0 ; then
  PS1_prompt_color="\[\e[0;31m\]"
else
  PS1_prompt_color="\[\e[0m\]"
fi # /if root
function tmout_set_color(){ 
  [ -z "${TMOUT:-}" ] && { echo -n "${e_clear}" ; return 0; } ||
  { echo -n -e "${e_bold};${f_yellow}"; return 0; } ;
} # /tmout_set_color

function get_screen_sc(){
    pid=$$;
    count=0;
    while ((count++ <= 10)); do
        if [ -e "/tmp/$pid" ]; then
            cat /tmp/$pid;
            break;
        fi
        pid=$(ps --no-headers -o ppid -p $pid| xargs echo -n);
        if ((pid == 1)); then
            echo "N/A";
            break
        fi
    done;
    if (( count == 11 )); then
        echo "N/A";
    fi
}

PS1=(
    "\[\e[${c_hostname}m\]${HOSTNAME} "                         # Hostname
    "\[\e[${c_lvl}m\]lvl:${SHLVL} "                             # ShellLevel
    "\[\e[${c_date}m\]\D{%Y%m%d}\[\e[${e_clear}m\] "            # Date
    "\[\e[${c_time}m\]\D{%H%M%S}\[\e[${e_clear};m\] "           # Time
    "$PS1_prompt_color"                                         # Colorize root
    "\[\e[${e_bold}m\]\u@\h\[\e[${e_clear};m\]"                 # User@Host
    '\[\e[${e_reverse};$(getHistColor)m\]\!\[\e[${e_clear};m\]' # Color History
    "\n\w"                                                      # Directory
    '\[\e[$(tmout_set_color)m\]'                                # Colorize based on tmout
    "\n("                                                       # Prompt
    '$(get_screen_sc)'                                          # Note escape in PS
    ") =====> \$ "                                              # Prompt
    "\[\e[${e_clear};m\]"
) # /PS1
store_IFS="$IFS"; IFS='' PS1=${PS1[*]}; IFS="$store_IFS"


# Aliases
lsflags="$lsflags --color"
alias now='date +%Y%m%d%H%M%S'
alias rm="/bin/rm -i"
alias ls="/bin/ls $lsflags"
alias grep="/bin/grep --color=auto"
alias init="echo init is deprecated. "
alias brst="killall -s SIGWINCH -u \$(whoami) bash" ;
alias less="/bin/less -R";
alias cp="/bin/cp --backup=numbered"
alias mv="/bin/mv --backup=numbered"
#alias pacman="/usr/bin/pacman --color=always";

# History clear manipulation
histclear_prefixes=( \
        'yaourt' 'cd' 'cp' 'mv' 'rm' 'echo' 'cat' 'ls' 'screen' '#' '[A-Z0-9]' 'u\+mount' \
        'pacman' 'grep' 'su' 'sudo' 'sschool' 'spersonal' 'ssh' 'scp' 'ping' 'move_to_pane' \
        'tm m' 'xsel' 'dirname' 'sed' 'eject' 'ethtool' 'for' 'chsh' '[^ ]latex' 'evince' 'clear' \
        'apropos' 'ip' 'fdisk' 'ftp' 'touch' 'bash' 'kill' 'ps' 'dropbox' \
        ) ; # histclear_prefixes
histclear_expr="$(echo -e '^\('$(echo ${histclear_prefixes[*]} | sed -e "s/ /\\\|/g")'\)')";
alias histclear="history -w; \
    sed -e \"1,200d\" \
        -e \"/${histclear_expr}/d\" \
        -i ~/.bash_history; \
        history -c;
        history -r;";
unset histclear_expr histclear_prefixes;

# set the locale if present as /etc/locale.conf
[ -e "/etc/locale.conf" ] && . /etc/locale.conf
